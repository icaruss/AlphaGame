#include "HelloWorldScene.h"

USING_NS_CC;

Scene* HelloWorld::createScene()
{
    // 'scene' is an autorelease object
    auto scene = Scene::create();
    
    // 'layer' is an autorelease object
    auto layer = HelloWorld::create();

    // add layer as a child to scene
    scene->addChild(layer);

    // return the scene
    return scene;
}

// on "init" you need to initialize your instance
bool HelloWorld::init()
{
    //////////////////////////////
    // 1. super init first
    if ( !Layer::init() )
    {
        return false;
    }
	
	auto listener = EventListenerTouchOneByOne::create();

	listener->onTouchBegan = CC_CALLBACK_2(HelloWorld::onTouchBegan, this);
	listener->onTouchEnded = CC_CALLBACK_2(HelloWorld::onTouchEnded, this);
	listener->onTouchMoved = CC_CALLBACK_2(HelloWorld::onTouchMoved, this);
	listener->onTouchCancelled = CC_CALLBACK_2(HelloWorld::onTouchCancelled, this);
	_eventDispatcher->addEventListenerWithSceneGraphPriority(listener, this);


    Size visibleSize = Director::getInstance()->getVisibleSize();
    Point origin = Director::getInstance()->getVisibleOrigin();

	points = new vector<Point*>();
	frameDelta = new Point(visibleSize.width * 0.1 , visibleSize.height * 0.1);

    /////////////////////////////
    // 2. add a menu item with "X" image, which is clicked to quit the program
    //    you may modify it.

    // add a "close" icon to exit the progress. it's an autorelease object
<<<<<<< HEAD
    //auto closeItem = MenuItemImage::create(
    //                                       "CloseNormal.png",
    //                                       "CloseSelected.png",
    //                                       CC_CALLBACK_1(HelloWorld::menuCloseCallback, this));
    
	//closeItem->setPosition(Point(origin.x + visibleSize.width - closeItem->getContentSize().width/2 ,
 //                               origin.y + closeItem->getContentSize().height/2));

=======

//TODO: Remove	
 //   auto closeItem = MenuItemImage::create(
 //                                          "CloseNormal.png",
 //                                          "CloseSelected.png",
 //                                          CC_CALLBACK_1(HelloWorld::menuCloseCallback, this));
 //   
	//closeItem->setPosition(Point(origin.x + visibleSize.width - closeItem->getContentSize().width/2 ,
 //                               origin.y + closeItem->getContentSize().height/2));

>>>>>>> bb5d4677e857fe6154056f9f4174072c7a9bf3f7
 //   // create menu, it's an autorelease object
 //   auto menu = Menu::create(closeItem, NULL);
 //   menu->setPosition(Point::ZERO);
 //   this->addChild(menu, 1);
<<<<<<< HEAD
=======

	CCSprite* ball = CCSprite::create("CloseNormal.png");
	ball->setPosition(Point(origin.x + visibleSize.width - ball->getContentSize().width/2 ,
		origin.y + ball->getContentSize().height/2));

	this->addChild(ball,100);
>>>>>>> bb5d4677e857fe6154056f9f4174072c7a9bf3f7

    /////////////////////////////
    // 3. add your codes below...

    // add a label shows "Hello World"
    // create and initialize a label
    
    auto label = LabelTTF::create("Hello World", "Arial", 24);
    
    // position the label on the center of the screen
    label->setPosition(Point(origin.x + visibleSize.width/2,
                            origin.y + visibleSize.height - label->getContentSize().height));

    // add the label as a child to this layer
    this->addChild(label, 1, 2);

    // add "HelloWorld" splash screen"
    auto sprite = Sprite::create("Backgrounds\\black-wood-background.jpg");

    // position the sprite on the center of the screen
    sprite->setPosition(Point(visibleSize.width/2 + origin.x, visibleSize.height/2 + origin.y));

    // add the sprite as a child to this layer
    this->addChild(sprite, 0);
    
    return true;
}


void HelloWorld::menuCloseCallback(Ref* pSender)
{
#if (CC_TARGET_PLATFORM == CC_PLATFORM_WP8) || (CC_TARGET_PLATFORM == CC_PLATFORM_WINRT)
	MessageBox("You pressed the close button. Windows Store Apps do not implement a close button.","Alert");
    return;
#endif

    Director::getInstance()->end();

#if (CC_TARGET_PLATFORM == CC_PLATFORM_IOS)
    exit(0);
#endif
}


// touches

bool HelloWorld::onTouchBegan(Touch *touch, Event *event)
{
	
	LabelTTF *label = (LabelTTF*)this->getChildByTag(2);
	label->setPosition(touch->getLocation());

	return true;
}


	void HelloWorld::onTouchEnded(Touch *touch, Event *event)
	{
		LabelTTF *label = (LabelTTF*)this->getChildByTag(2);
		label->setPosition(touch->getLocation());
	}
	void HelloWorld::onTouchMoved(Touch *touch, Event *event)
	{
		LabelTTF *label = (LabelTTF*)this->getChildByTag(2);
		label->setPosition(touch->getLocation());
	}
	void HelloWorld::onTouchCancelled(Touch *touch, Event *event)
	{
		onTouchEnded(touch,event);
	}
